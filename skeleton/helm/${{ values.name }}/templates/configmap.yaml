apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "${{ values.name }}.fullname" . }}-config
  labels:
    {{- include "${{ values.name }}.labels" . | nindent 4 }}
data:
  litellm-config.yaml: |
    model_list:
      # Azure OpenAI models
      - model_name: gpt-4o
        litellm_params:
          model: azure/gpt-4o
          api_base: ${AZURE_API_BASE}
          api_key: ${AZURE_API_KEY}
          api_version: ${AZURE_API_VERSION}

      - model_name: gpt-4o-mini
        litellm_params:
          model: azure/gpt-4o-mini
          api_base: ${AZURE_API_BASE}
          api_key: ${AZURE_API_KEY}
          api_version: ${AZURE_API_VERSION}

      - model_name: gpt-35-turbo
        litellm_params:
          model: azure/gpt-35-turbo
          api_base: ${AZURE_API_BASE}
          api_key: ${AZURE_API_KEY}
          api_version: ${AZURE_API_VERSION}

      # AWS Bedrock models
      - model_name: claude-3-5-sonnet
        litellm_params:
          model: bedrock/anthropic.claude-3-5-sonnet-20240620-v1:0
          aws_access_key_id: ${AWS_ACCESS_KEY_ID}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          aws_region_name: ${AWS_REGION}

      - model_name: claude-3-haiku
        litellm_params:
          model: bedrock/anthropic.claude-3-haiku-20240307-v1:0
          aws_access_key_id: ${AWS_ACCESS_KEY_ID}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          aws_region_name: ${AWS_REGION}

      # OpenAI models (for comparison/fallback)
      - model_name: openai-gpt-4o
        litellm_params:
          model: gpt-4o
          api_key: ${OPENAI_API_KEY}

    litellm_settings:
      drop_params: true
      set_verbose: false
      json_logs: true

    general_settings:
      completion_model: gpt-4o
      master_key: ${LITELLM_MASTER_KEY}
      {{- if and .Values.postgresql .Values.postgresql.enabled }}
      database_url: ${DATABASE_URL}
      database_type: "postgresql"
      {{- end }}
      {{- if and .Values.redis .Values.redis.enabled }}
      redis_host: ${REDIS_HOST}
      redis_port: ${REDIS_PORT}
      redis_password: ${REDIS_PASSWORD}
      {{- end }}

    # Router settings
    router_settings:
      routing_strategy: "usage-based-routing"
      model_group_alias:
        gpt-4: ["gpt-4o", "openai-gpt-4o"]
        claude: ["claude-3-5-sonnet", "claude-3-haiku"]

    # Health check endpoint
    health_check: true

    # Logging configuration
    environment: {{ .Values.config.environment }}
    log_level: {{ .Values.config.logLevel }}

    # Rate limiting
    tpm_limit: 10000
    rpm_limit: 1000
    max_budget: 100.0
    budget_duration: "30d"
